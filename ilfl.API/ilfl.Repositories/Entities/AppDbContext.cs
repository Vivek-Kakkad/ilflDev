// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ilfl.Repositories.Entities;

public partial class AppDbContext : DbContext
{
    public AppDbContext(DbContextOptions<AppDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Ifctcontent> Ifctcontents { get; set; }

    public virtual DbSet<IfdddirectorDetail> IfdddirectorDetails { get; set; }

    public virtual DbSet<Ifuluser> Ifulusers { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Ifctcontent>(entity =>
        {
            entity.HasKey(e => e.Ifctid);

            entity.ToTable("IFCTContent");

            entity.Property(e => e.Ifctid).HasColumnName("IFCTId");
            entity.Property(e => e.IfctdisplayName)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("IFCTDisplayName");
            entity.Property(e => e.Ifctfile)
                .IsRequired()
                .IsUnicode(false)
                .HasColumnName("IFCTFile");
            entity.Property(e => e.Ifctsection)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("IFCTSection");
        });

        modelBuilder.Entity<IfdddirectorDetail>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IFDDDirectorDetails");

            entity.Property(e => e.Ifddfile)
                .IsRequired()
                .IsUnicode(false)
                .HasColumnName("IFDDFile");
            entity.Property(e => e.Ifddname)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("IFDDName");
            entity.Property(e => e.Ifddposition)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("IFDDPosition");
        });

        modelBuilder.Entity<Ifuluser>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IFULUsers");

            entity.Property(e => e.Ifulpassword)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("IFULPassword");
            entity.Property(e => e.Ifulusername)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("IFULUsername");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}